---
- name: install hard requirements for ansible
  hosts: all
  remote_user: root
  gather_facts: false
  roles:
    - bootstrap

- name: setup host machine 
  hosts: all
  remote_user: root
  vars:
    deploy_env_file: /etc/deploy_env.txt

  pre_tasks:
    - stat: path={{ deploy_env_file }}
      register: st

    - command: /bin/cat {{ deploy_env_file }} 
      when: st.stat.exists
      register: f

    - set_fact: deploy_env={{ f.stdout | default("") }} 

  roles:
    - utilities

- hosts: jenkins
  remote_user: root
  vars_files:
    - [ "vars/jenkins/deploy_{{hostvars[inventory_hostname]['deploy_env']}}.yml", vars/jenkins/deploy_defaults.yml ]

  pre_tasks:
    - hostname: name=jenkins
    # TODO: There is an ordering an implicit circular dependency between the nginx and ssl roles; where the ssl role
    # depends on the nginx user being available and the nginx module requires the ssl keys existing. By installing nginx
    # and creating the user, we break the circular dependency. Is there a more elegant way?
    - dnf: name=nginx state=present   

  roles:
    - role: avahi
      when: deploy_env == "vagrant"
    - role: jenkins
      jenkins_admin_password: 12345

- hosts: robhome 
  remote_user: root
  roles: 
  - utilities
  - sonos   

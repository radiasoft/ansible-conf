
# Execute in subshell
(
set -e -u -o pipefail 
VENV_ROOT="$AUTOENV_CUR_DIR/.venv"
VENV_ACTIVATE="$VENV_ROOT/bin/activate"

# Sanity Check? Trying to figure out a good way get the path to the this file unambigously from any enviroment
# (Shell sourced, script sourced, BASH, ZSH). Assumming that if $AUTOENV_CUR_DIR is the right path, then $AUTOENV_CUR_DIR/.env 
# will exist. Might need to revisit this approach.
test -f $AUTOENV_CUR_DIR/.env

vagrant plugin list | grep -q vagrant-triggers || vagrant plugin install vagrant-triggers

if [[ ! -f $VENV_ACTIVATE ]]; then
    virtualenv-2.7 $VENV_ROOT

    set +u +e
    source $VENV_ACTIVATE
    set -u -e
    
    pip install -r $AUTOENV_CUR_DIR/requirements.txt

    # Install terraform in the virtualenv bin dir 
    case "$(uname -m)" in
        x86_64) 
            ARCH=amd64
            ;;
        i386)
            ARCH=386
            ;;
        *)
            echo 'Unkown ARCH'
            exit 1
    esac  
    
    OS=$(uname -s | tr '[:upper:]' '[:lower:]')
    T_VER=0.8.4
    T_URL="https://releases.hashicorp.com/terraform/${T_VER}/terraform_${T_VER}_${OS}_${ARCH}.zip"

    curl $T_URL | funzip > $VENV_ROOT/bin/terraform
    chmod +x $VENV_ROOT/bin/terraform
fi
)

source <(
set -e -u -o pipefail 

VENV_ROOT="$AUTOENV_CUR_DIR/.venv"
VENV_ACTIVATE="$VENV_ROOT/bin/activate"

printf "export ANSIBLE_CONFIG=$AUTOENV_CUR_DIR/ansible.cfg\n"
printf "export VIRTUAL_ENV=$VENV_ROOT\n"
)

set +e +u
test -f "$VIRTUAL_ENV/bin/activate" && source "$VIRTUAL_ENV/bin/activate" || echo Error with .env file

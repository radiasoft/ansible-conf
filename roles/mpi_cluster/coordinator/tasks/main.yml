---
- name: wait for jupyterhub container to be ready
  wait_for: port={{ jupyterhub.host.port }} delay=15 state=present timeout=60

- name: verify coordinator user exists
  changed_when: coordinator_user_exists.rc != 0
  command: "/bin/docker exec {{ jupyterhub.name }} /usr/bin/id {{ mpi_cluster.coordinator.user_name }}"
  failed_when: no
  register: coordinator_user_exists

- name: create coordinator user
  changed_when: no
  command: "/bin/docker exec {{ jupyterhub.name }} /usr/sbin/useradd {{ mpi_cluster.coordinator.user_name }}"
  when: coordinator_user_exists|changed

- name: set coordinator user password
  changed_when: no
  shell: >
    echo "{{ mpi_cluster.coordinator.user_name }}:{{ mpi_cluster.coordinator.user_password }}" | 
    /bin/docker exec -i {{ jupyterhub.name }} /usr/sbin/chpasswd {{ mpi_cluster.coordinator.user_name }}
  when: coordinator_user_exists|changed

- name: create coordinator user ssh dir
  file:
    group: vagrant
    mode: 0700
    owner: vagrant
    path: "{{ mpi_cluster.coordinator.ssh.host_d }}/{{ mpi_cluster.coordinator.user_name }}"
    state: directory

- name: create coordinator user ssh key
  command: "/usr/bin/ssh-keygen -f id_rsa -N ''"
  args:
    chdir: "{{ mpi_cluster.coordinator.ssh.host_d }}/{{ mpi_cluster.coordinator.user_name }}"
    creates: id_rsa
  become: yes
  become_user: vagrant

- name: read coordinator user pub key
  slurp:
    src: "{{ mpi_cluster.coordinator.ssh.host_d }}/{{ mpi_cluster.coordinator.user_name }}/id_rsa.pub"
  register: _pk 

- set_fact:
    coordinator_pub_key: "{{ _pk.content | b64decode }}"

- name: create ssh config for workers
  template:
    dest: "{{ mpi_cluster.coordinator.ssh.host_d }}/{{ mpi_cluster.coordinator.user_name }}/config"
    group: vagrant
    mode: 0640
    owner: vagrant
    src: ssh_config.jinja
